const { app } = require('@azure/functions');
const { getContainer } = require('../shared/database');

// Initialize the Cosmos DB container for texts
const textsContainer = getContainer('texts');

app.http('PostText', {
    methods: ['POST'],
    authLevel: 'anonymous',
    handler: async (request, context) => {
        try {
            // Parse the request body
            const body = await request.json();

            if (!body || !body.text) {
                return {
                    status: 400,
                    body: { error: 'Invalid request. "text" field is required.' },
                };
            }

            // Create a new text item with an autogenerated ID
            const newText = {
                id: Date.now().toString(), // Generate a unique ID (or use a UUID library)
                text: body.text,
            };

            console.log(`Attempting to insert text: ${JSON.stringify(newText)}`);

            // Insert the new item into the Cosmos DB container
            const { resource: createdText } = await textsContainer.items.create(newText);

            return {
                status: 201,
                body: { message: 'Text created successfully', text: createdText },
            };
        } catch (err) {
            console.error('Error creating text:', err.message);
            return {
                status: 500,
                body: { error: 'Failed to create text', details: err.message },
            };
        }
    },
});